name: Build and Publish Docker Image on main

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        default: '21'
        type: string

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ inputs.java-version }}

      - name: Build and Test
        run: ./gradlew clean build --no-daemon

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs

  docker:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build/libs

      - name: Define Docker Tag (dev version)
        id: generate_tag
        run: |
          SHORT_SHA=$(echo "$GITHUB_SHA" | cut -c1-7)
          DATE=$(date +'%Y%m%d')
          echo "TAG=dev-${DATE}-${SHORT_SHA}" >> "$GITHUB_ENV"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE="ghcr.io/${{ github.repository }}"
          docker build -t "$IMAGE:${{ env.TAG }}" .
          docker tag "$IMAGE:${{ env.TAG }}" "$IMAGE:latest"

      - name: Push Docker image
        run: |
          IMAGE="ghcr.io/${{ github.repository }}"
          docker push "$IMAGE:${{ env.TAG }}"
          docker push "$IMAGE:latest"

  release_drafter:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}