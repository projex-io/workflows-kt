name: Auto-label Pull Request based on Commit Message

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  auto_label:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extraire et appliquer les labels
        run: |
          echo "📦 Lecture du commit de la branche source..."
          COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
          LAST_COMMIT_MESSAGE=$(git show --pretty=format:%s --no-patch "$COMMIT_SHA")

          echo "🔍 Message du commit: $LAST_COMMIT_MESSAGE"

          # Extraire tous les #labels (ex: #backend, #feature-x)
          RAW_LABELS=$(echo "$LAST_COMMIT_MESSAGE" | grep -o "#[a-zA-Z0-9_-]*" | tr -d "#" | xargs)
          echo "🏷️ Labels détectés: $RAW_LABELS"

          if [[ -z "$RAW_LABELS" ]]; then
            echo "❌ Aucun label détecté."
            exit 0
          fi

          # Supprimer les doublons
          UNIQUE_LABELS=($(printf "%s\n" $RAW_LABELS | sort -u))

          # Vérifier les labels valides dans le repo
          echo "📥 Récupération des labels existants dans le repo..."
          EXISTING_LABELS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/labels?per_page=100" | jq -r '.[].name')

          FILTERED_LABELS=()
          for label in "${UNIQUE_LABELS[@]}"; do
            if echo "$EXISTING_LABELS" | grep -Fxq "$label"; then
              FILTERED_LABELS+=("\"$label\"")
            else
              echo "⚠️ Label '$label' non trouvé, ignoré."
            fi
          done

          if [ ${#FILTERED_LABELS[@]} -eq 0 ]; then
            echo "❌ Aucun label valide à appliquer."
            exit 0
          fi

          LABEL_JSON="{ \"labels\": [$(IFS=,; echo "${FILTERED_LABELS[*]}")] }"
          echo "$LABEL_JSON" > labels.json

          echo "🚀 Application des labels: ${FILTERED_LABELS[*]}"
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @labels.json \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels"
